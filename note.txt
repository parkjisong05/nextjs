https://tailadmin.com/docs

# Build for production
npm run deploy:build

# Test standalone build
npm run start:standalone

npm run build:production


# Development mode
npm run dev

# Production build
npm run build
npm start


  // "scripts": {
  //   "dev": "next dev",
  //   "build": "next build",
  //   "start": "next start",
  //   "lint": "next lint"
  // },

Template : TailAdmin Next.js (Open-Source For Personal and Commercial Use)
‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏´‡∏•‡∏±‡∏Å
 - Next.js 15 ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö SSR, SSG ‡πÅ‡∏•‡∏∞ React Server Components ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå
 - Tailwind CSS 4 ‡πÉ‡∏´‡πâ utility class ‡∏û‡∏£‡πâ‡∏≠‡∏° Dark/Light Mode ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ
 - React 19 + TypeScript ‡πÄ‡∏û‡∏¥‡πà‡∏° type-safety ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏û‡∏±‡∏í‡∏ô‡∏≤
 - ApexCharts, JS Vector Map

1. Utility Classes
// Background colors
<div className="bg-primary-custom">Primary Background</div>
<div className="bg-primary-100-custom">Light Primary</div>
<div className="bg-primary-600-custom">Dark Primary</div>

// Text colors
<h1 className="text-primary-custom">Primary Text</h1>
<p className="text-primary-800-custom">Dark Primary Text</p>

// Border colors
<div className="border-2 border-primary-custom">Primary Border</div>

2. Component Classes
// Buttons
<button className="btn-primary-custom">Primary Button</button>
<button className="btn-primary-outline-custom">Outline Button</button>
<button className="btn-primary-ghost-custom">Ghost Button</button>

// Badges
<span className="badge-primary-custom">Badge</span>
<span className="badge-primary-solid-custom">Solid Badge</span>

// Forms
<input className="input-primary-custom" />

// Cards
<div className="card-primary-custom">Card Content</div>

3. CSS Variables
// Inline styles
<div style={{ backgroundColor: 'var(--color-primary)' }}>
  Custom Style
</div>

// CSS-in-JS
const buttonStyle = {
  backgroundColor: 'var(--bg-primary)',
  color: 'var(--text-on-primary)',
  borderColor: 'var(--border-primary)'
};

----------------------------------------------------
icon
https://react-icons.github.io/react-icons/

-----------------------------------------------------



 Mock  Screen ‡∏î‡πâ‡∏ß‡∏¢ React 
1. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Screen 
1.1 Screen  Assigment Rule
1.2 Screen  ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏ô Proposal ‡πÄ‡∏ä‡πà‡∏ô 
  - ‡∏û‡∏ß‡∏Å UX & Header Page & Banner 
  - ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á (‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏≤‡∏á ‡∏õ‡∏∏‡πà‡∏° Application)
  - ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß
  - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏≠‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å Database
1.3 Screen Master ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£ Assigment Rule (Endr Info, Job Type, Team and etc)

Demo
2. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á API Process Assignment ‡πÉ‡∏´‡πâ‡πÅ‡∏à‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö Round robin , Pool, Specific Assignment ‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Ç‡πâ‡∏≠ 1.1
  - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏≠‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å Database


  Mock  Screen ‡∏î‡πâ‡∏ß‡∏¢ React 
1. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Screen 
1.1 Screen  Assigment Rule
1.2 Screen  ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏ô Proposal ‡πÄ‡∏ä‡πà‡∏ô 
  - ‡∏û‡∏ß‡∏Å UX & Header Page & Banner 
  - ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á (‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏≤‡∏á ‡∏õ‡∏∏‡πà‡∏° Application)
  - ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß
1.3 Screen Master ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£ Assigment Rule (Endr Info, Job Type, Team and etc)

Demo
2. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á API Process Assignment ‡πÉ‡∏´‡πâ‡πÅ‡∏à‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö Round robin , Pool, Specific Assignment ‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Ç‡πâ‡∏≠ 1.1




next config ‡πÅ‡∏Å‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡∏≠‡∏ô build

import type { NextConfig } from 'next'
import * as path from 'path'

const nextConfig: NextConfig = {
  // üìÅ Static Assets Optimization
  compress: true,
  
  // üîí Server Security Headers
  poweredByHeader: false,
  
  // üéØ Performance Optimizations - Next.js 15 Compatible
  serverExternalPackages: [],
  
  // ‚úÖ React 19 & Prerender Compatibility
  experimental: {
    // ‚ö° ‡∏õ‡∏¥‡∏î partial prerendering ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤
    ppr: false,
    
    // üîß Force all pages to be dynamic (‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á prerender errors)
    // serverActions: true,
  },
  
  // üì¶ Webpack Configuration
  webpack: (config, { buildId, dev, isServer, defaultLoaders, webpack }) => {
    if (!dev && !isServer) {
      config.resolve.alias = {
        ...config.resolve.alias,
        '@': path.resolve(__dirname, './src'),
      };
    }
    
    config.module.rules.push({
      test: /\.(png|jpe?g|gif|svg|ico)$/,
      type: 'asset/resource',
    });
    
    // ‚úÖ Handle React 19 compatibility issues
    if (!isServer) {
      config.resolve.fallback = {
        ...config.resolve.fallback,
        fs: false,
        path: false,
        crypto: false,
      };
    }
    
    // ‚úÖ Handle dynamic import issues
    config.optimization = {
      ...config.optimization,
      splitChunks: {
        ...config.optimization.splitChunks,
        cacheGroups: {
          ...config.optimization.splitChunks?.cacheGroups,
          default: false,
          vendors: false,
          // Create a separate chunk for problematic libraries
          vendor: {
            chunks: 'all',
            name: 'vendor',
            test: /[\\/]node_modules[\\/]/,
            priority: 20,
          },
        },
      },
    };
    
    return config;
  },
  
  // üñºÔ∏è Image Optimization
  images: {
    formats: ['image/webp', 'image/avif'],
    deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
    imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
    minimumCacheTTL: 31536000,
  },
  
  // üõ°Ô∏è Security Headers
  async headers() {
    return [
      {
        source: '/(.*)',
        headers: [
          {
            key: 'X-Frame-Options',
            value: 'DENY',
          },
          {
            key: 'X-Content-Type-Options',
            value: 'nosniff',
          },
          {
            key: 'Referrer-Policy',
            value: 'origin-when-cross-origin',
          },
          {
            key: 'X-XSS-Protection',
            value: '1; mode=block',
          },
          {
            key: 'X-DNS-Prefetch-Control',
            value: 'on',
          },
        ],
      },
      {
        source: '/_next/static/(.*)',
        headers: [
          {
            key: 'Cache-Control',
            value: 'public, max-age=31536000, immutable',
          },
        ],
      },
    ];
  },
  
  // üîß TypeScript Configuration
  typescript: {
    ignoreBuildErrors: false,
  },
  
  // ‚ö° Build Optimizations
  generateEtags: true,
  httpAgentOptions: {
    keepAlive: true,
  },
};

export default nextConfig;

‡∏´‡∏£‡∏∑‡∏≠
const nextConfig: NextConfig = {
  // ... config ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
  
  // üö® Emergency fix: Skip build errors (‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö production)
  typescript: {
    ignoreBuildErrors: true, // ‚úÖ Skip TypeScript errors ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
  },
  eslint: {
    ignoreDuringBuilds: true, // ‚úÖ Skip ESLint errors ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
  },
  
  // üîß Force all pages to be dynamic
  experimental: {
    ppr: false,
  },
}


