// src/mappers/inboxMapper.ts

import { InboxRow } from "@/types/inbox";
import { ApiWorkListItem } from "@/api/inboxService";

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API (ApiWorkListItem) ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà UI ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (InboxRow)
 * @param apiData - Array ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API
 * @returns Array ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô UI
 */
export const mapApiWorkListToInboxRows = (apiData: ApiWorkListItem[]): InboxRow[] => {
  if (!Array.isArray(apiData)) {
    return []; // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà array ‡πÉ‡∏´‡πâ return array ‡∏ß‡πà‡∏≤‡∏á
  }
  
  return apiData.map((item : any) => ({
    id: item.workListId,
    topic: item.endrDesc + ' ‡∏Å‡∏ò. ' + item.policyNo || 'N/A',
    
    // üîß ‡πÅ‡∏õ‡∏•‡∏á count ‡πÄ‡∏õ‡πá‡∏ô number
    count: typeof item.taskNo === 'string' 
      ? parseInt(item.taskNo, 10) || 0 
      : (item.taskNo || 0),
    
    // üîß ‡πÅ‡∏õ‡∏•‡∏á priority ‡πÄ‡∏õ‡πá‡∏ô number  
    priority: typeof item.priority === 'string' 
      ? parseInt(item.priority, 10) || 1 
      : (item.priority || 1),
    
    summaryBy: item.assigneeId || '-',
    statusText: item.jobStatus || '-',
    postFixCode: item.endrCode || '-',
    team: item.team || '-',
    createdAt: item.createDate || '-',
    receivedBy: item.acquirerId || '-',
    systemAt: item.jobAssignDate || '-',
    policyNo: item.policyNo,
    insuredName: item.clientName || '-',
    postMarkUser: item.createBy || '-',
    
    // üîß ‡πÄ‡∏û‡∏¥‡πà‡∏° properties ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    a1: item.fileName || '-',
    a2: item.endrCreateDate || '-', 
    a3: item.endrEffectiveDate || '-',
    a4: item.edasDocStatus || '-',
    
    urgency: 'medium' as const,
  }));
};
